# 学生管理系统API对接文档

## 接口基地址
`https://jcjheypwryac.sealoshzh.site/`

## 1. 查询所有学生

### 接口信息
- **URL**: `https://jcjheypwryac.sealoshzh.site/api/get-students`
- **方法**: `GET`
- **功能**: 从数据库的'list'集合中查询并返回所有学生

### 请求参数
无

### 响应示例

**成功响应 (200 OK)**:
```json
[
  {
    "_id": "60d5f7e3a1b2c3d4e5f6a7b8",
    "name": "张三",
    "age": 20,
    "class": "计算机科学与技术1班",
    "createdAt": "2023-06-28T10:15:31.000Z"
  },
  {
    "_id": "60d5f7e3a1b2c3d4e5f6a7b9",
    "name": "李四",
    "age": 19,
    "class": "软件工程2班",
    "createdAt": "2023-06-29T14:20:45.000Z"
  }
]
```

**错误响应 (500 Internal Server Error)**:
```json
{
  "message": "服务器错误，获取学生列表失败"
}
```

## 2. 添加新的学生

### 接口信息
- **URL**: `https://jcjheypwryac.sealoshzh.site/api/add-student`
- **方法**: `POST`
- **功能**: 向'list'集合中添加新的学生

### 请求参数

**请求体 (JSON)**:
```json
{
  "name": "王五",        // 学生姓名（必需）
  "age": 21,             // 学生年龄（必需，正整数）
  "class": "电子工程3班"   // 学生班级（必需）
}
```

### 响应示例

**成功响应 (201 Created)**:
```json
{
  "_id": "60d5f7e3a1b2c3d4e5f6a7ba",
  "name": "王五",
  "age": 21,
  "class": "电子工程3班",
  "createdAt": "2023-07-01T09:30:15.000Z"
}
```

**错误响应 (400 Bad Request)**:
```json
{
  "message": "数据验证失败",
  "errors": ["请输入学生姓名", "年龄必须是正整数"]
}
```

**错误响应 (500 Internal Server Error)**:
```json
{
  "message": "服务器错误，添加学生失败"
}
```

## 3. 更新学生状态

### 接口信息
- **URL**: `https://jcjheypwryac.sealoshzh.site/api/update-student/:id`
- **方法**: `POST`
- **功能**: 根据 id 更新指定学生的信息

### 请求参数

**路径参数**:
- `id`: 学生的唯一标识符

**请求体 (JSON)**:
```json
{
  "name": "王五改",     // 更新后的学生姓名
  "age": 22,            // 更新后的年龄
  "class": "电子工程1班"  // 更新后的班级
}
```

### 响应示例

**成功响应 (200 OK)**:
```json
{
  "_id": "60d5f7e3a1b2c3d4e5f6a7ba",
  "name": "王五改",
  "age": 22,
  "class": "电子工程1班",
  "createdAt": "2023-07-01T09:30:15.000Z"
}
```

**错误响应 (404 Not Found)**:
```json
{
  "message": "找不到指定的学生"
}
```

**错误响应 (400 Bad Request)**:
```json
{
  "message": "数据验证失败",
  "errors": ["年龄必须是正整数"]
}
```

**错误响应 (500 Internal Server Error)**:
```json
{
  "message": "服务器错误，更新学生信息失败"
}
```

## 4. 删除学生

### 接口信息
- **URL**: `https://jcjheypwryac.sealoshzh.site/api/del-student/:id`
- **方法**: `POST`
- **功能**: 根据 id 删除指定的学生

### 请求参数

**路径参数**:
- `id`: 学生的唯一标识符

### 响应示例

**成功响应 (200 OK)**:
```json
{
  "message": "学生删除成功"
}
```

**错误响应 (404 Not Found)**:
```json
{
  "message": "找不到指定的学生"
}
```

**错误响应 (500 Internal Server Error)**:
```json
{
  "message": "服务器错误，删除学生失败"
}
```

## 注意事项

1. 所有接口支持跨域请求
2. 请求体必须使用 JSON 格式
3. 年龄字段必须是正整数
4. 所有必需字段不能为空
5. 系统会对所有请求进行基本的日志记录